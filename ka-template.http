################################################################################
# Azure AI Search KR + Foundry MCP Demo (Sanitized / Generic)
# API versions: KR=2025-08-01-Preview, Foundry=2025-05-01
#
# How to run (no secrets in this file):
#  1) Set environment variables (VS Code REST Client loads .env automatically):
#       export SEARCH_API_KEY='<your-search-admin-or-query-key>'
#       export FOUNDRY_BEARER_TOKEN='<aad-bearer-token>'
#  2) Replace <placeholders> below (endpoints, subscription, RG, storage, etc.).
#  3) Prepare content:
#       - Create a blob container (e.g., "<your-vlog-container>").
#       - Drop PDFs into:
#           /content/vlog/pdfs/               (for KS #1)
#           /content/notes/pdfs/              (for KS #2)
#       - Or use an existing Search index (see Section 1b).
#  4) Send requests from VS Code "REST Client" or Thunder Client.
#
# Supported models for this demo (use exactly these):
#   Chat / Completion:
#     - gpt-4o
#     - gpt-4o-mini
#     - gpt-4.1-nano
#     - gpt-4.1-mini
#     - gpt-4.1
#     - gpt-5
#     - gpt-5-mini
#     - gpt-5-nano
#   Embedding:
#     - text-embedding-ada-002
#     - text-embedding-3-large
#     - text-embedding-3-small
################################################################################

### ---------- Configuration (NO SECRETS CHECKED IN) ----------
@search-endpoint = https://<your-search-service>.search.windows.net
@search-api-version = 2025-08-01-Preview

@foundry-project-endpoint = https://<your-foundry>.services.ai.azure.com/api/projects/<your-project-id>
@foundry-api-version = 2025-05-01

# Secrets via environment variables only:
@search-api-key = {{$env SEARCH_API_KEY}}
@foundry-bearer-token = {{$env FOUNDRY_BEARER_TOKEN}}

# Azure resources (non-secret identifiers)
@subscription-id = <your-subscription-id>
@resource-group = <your-resource-group>
@storage-account = <your-storage-account>

# Logical names
@ks-docs-1 = ks-docs-primary
@ks-docs-2 = ks-docs-secondary
@agent-name = knowledge-agent
@foundry-assistant-name = foundry-knowledge-assistant

################################################################################
# 1) CREATE KNOWLEDGE SOURCES (Blob; you supply containerName)
################################################################################

### 1.1 KS #1 (e.g., vlog PDFs) — insert your blob container name
PUT {{search-endpoint}}/knowledgeSources/{{ks-docs-1}}?api-version={{search-api-version}}
api-key: {{search-api-key}}
Content-Type: application/json

{
  "name": "{{ks-docs-1}}",
  "kind": "azureBlob",
  "description": "General documents (e.g., vlog transcripts, PDFs). Drop PDFs under /content/vlog/pdfs/",
  "azureBlobParameters": {
    "connectionString": "ResourceId=/subscriptions/{{subscription-id}}/resourceGroups/{{resource-group}}/providers/Microsoft.Storage/storageAccounts/{{storage-account}};",
    "containerName": "<your-vlog-container>",                 // you provide
    "folderPath": "content/vlog/pdfs/",                       // drop PDFs here
    "embeddingModel": {
      "kind": "azureAI",
      "azureAIParameters": {
        "projectUri": "{{foundry-project-endpoint}}",
        "apiVersion": "{{foundry-api-version}}",
        "modelName": "<choose: text-embedding-ada-002 | text-embedding-3-large | text-embedding-3-small>"
      }
    },
    "chatCompletionModel": {
      "kind": "azureAI",
      "azureAIParameters": {
        "projectUri": "{{foundry-project-endpoint}}",
        "apiVersion": "{{foundry-api-version}}",
        "modelName": "<choose: gpt-4o | gpt-4o-mini | gpt-4.1-nano | gpt-4.1-mini | gpt-4.1 | gpt-5 | gpt-5-mini | gpt-5-nano>"
      }
    }
  }
}

### 1.2 KS #2 (e.g., notes PDFs) — insert your blob container name
PUT {{search-endpoint}}/knowledgeSources/{{ks-docs-2}}?api-version={{search-api-version}}
api-key: {{search-api-key}}
Content-Type: application/json

{
  "name": "{{ks-docs-2}}",
  "kind": "azureBlob",
  "description": "General documents (e.g., notes/policies). Drop PDFs under /content/notes/pdfs/",
  "azureBlobParameters": {
    "connectionString": "ResourceId=/subscriptions/{{subscription-id}}/resourceGroups/{{resource-group}}/providers/Microsoft.Storage/storageAccounts/{{storage-account}};",
    "containerName": "<your-vlog-container>",                 // you provide (same or different)
    "folderPath": "content/notes/pdfs/",                      // drop PDFs here
    "embeddingModel": {
      "kind": "azureAI",
      "azureAIParameters": {
        "projectUri": "{{foundry-project-endpoint}}",
        "apiVersion": "{{foundry-api-version}}",
        "modelName": "<choose: text-embedding-ada-002 | text-embedding-3-large | text-embedding-3-small>"
      }
    },
    "chatCompletionModel": {
      "kind": "azureAI",
      "azureAIParameters": {
        "projectUri": "{{foundry-project-endpoint}}",
        "apiVersion": "{{foundry-api-version}}",
        "modelName": "<choose: gpt-4o | gpt-4o-mini | gpt-4.1-nano | gpt-4.1-mini | gpt-4.1 | gpt-5 | gpt-5-mini | gpt-5-nano>"
      }
    }
  }
}

################################################################################
# 1b) OPTIONAL: KNOWLEDGE SOURCE VIA EXISTING SEARCH INDEX
################################################################################

PUT {{search-endpoint}}/knowledgeSources/ks-searchindex?api-version={{search-api-version}}
api-key: {{search-api-key}}
Content-Type: application/json

{
  "name": "ks-searchindex",
  "kind": "searchIndex",
  "description": "Existing Azure AI Search index with documents",
  "searchIndexParameters": {
    "indexName": "<your-index-name>"                          // you provide
  },
  "embeddingModel": {
    "kind": "azureAI",
    "azureAIParameters": {
      "projectUri": "{{foundry-project-endpoint}}",
      "apiVersion": "{{foundry-api-version}}",
      "modelName": "<choose: text-embedding-ada-002 | text-embedding-3-large | text-embedding-3-small>"
    }
  },
  "chatCompletionModel": {
    "kind": "azureAI",
    "azureAIParameters": {
      "projectUri": "{{foundry-project-endpoint}}",
      "apiVersion": "{{foundry-api-version}}",
      "modelName": "<choose: gpt-4o | gpt-4o-mini | gpt-4.1-nano | gpt-4.1-mini | gpt-4.1 | gpt-5 | gpt-5-mini | gpt-5-nano>"
    }
  }
}

################################################################################
# 2) CREATE KNOWLEDGE AGENT (uses Foundry models only)
################################################################################

PUT {{search-endpoint}}/agents/{{agent-name}}?api-version={{search-api-version}}
api-key: {{search-api-key}}
Content-Type: application/json

{
  "name": "{{agent-name}}",
  "description": "Generic knowledge agent using two blob sources (and optional Search index).",
  "retrievalInstructions": "Use ks-docs-primary for vlog PDFs; use ks-docs-secondary for notes/policies. Optionally include ks-searchindex if present.",
  "knowledgeSources": [
    { "name": "{{ks-docs-1}}", "alwaysQuerySource": true, "includeReferences": true, "includeReferenceSourceData": true },
    { "name": "{{ks-docs-2}}", "alwaysQuerySource": true, "includeReferences": true, "includeReferenceSourceData": true }
    // Optionally add: { "name": "ks-searchindex", "alwaysQuerySource": false, "includeReferences": true }
  ],
  "models": [
    {
      "kind": "azureAI",
      "azureAIParameters": {
        "projectUri": "{{foundry-project-endpoint}}",
        "apiVersion": "{{foundry-api-version}}",
        "modelName": "<choose: gpt-4o | gpt-4o-mini | gpt-4.1-nano | gpt-4.1-mini | gpt-4.1 | gpt-5 | gpt-5-mini | gpt-5-nano>"
      }
    }
  ],
  "outputConfiguration": {
    "modality": ["answerSynthesis", "extractiveData"],
    "includeActivity": true
  }
}

################################################################################
# 3) TEST AGENTIC RETRIEVAL (generic prompts)
################################################################################

### 3.1 Summarization across PDFs
POST {{search-endpoint}}/agents/{{agent-name}}/retrieve?api-version={{search-api-version}}
api-key: {{search-api-key}}
Content-Type: application/json
x-ms-client-request-id: 11111111-1111-1111-1111-111111111111

{
  "messages": [
    {
      "role": "user",
      "content": [
        { "type": "text", "text": "Summarize the key themes across the PDFs in these sources. Provide citations." }
      ]
    }
  ]
}

### 3.2 Compare/contrast and flag inconsistencies
POST {{search-endpoint}}/agents/{{agent-name}}/retrieve?api-version={{search-api-version}}
api-key: {{search-api-key}}
Content-Type: application/json

{
  "messages": [
    {
      "role": "user",
      "content": [
        { "type": "text", "text": "Compare the guidance across documents and highlight any conflicting statements, with references." }
      ]
    }
  ]
}

################################################################################
# 4) MCP SERVER (JSON-RPC) FOR THE AGENT
################################################################################

### 4.1 List tools
POST {{search-endpoint}}/agents/{{agent-name}}/mcp?api-version={{search-api-version}}
api-key: {{search-api-key}}
Content-Type: application/json
Accept: application/json, text/event-stream

{ "jsonrpc": "2.0", "id": 1, "method": "tools/list", "params": {} }

### 4.2 Call retrieve via MCP
POST {{search-endpoint}}/agents/{{agent-name}}/mcp?api-version={{search-api-version}}
api-key: {{search-api-key}}
Content-Type: application/json
Accept: application/json, text/event-stream

{
  "jsonrpc": "2.0",
  "id": 2,
  "method": "tools/call",
  "params": {
    "name": "knowledge_agent_retrieve",
    "arguments": {
      "request": {
        "messages": [
          { "role": "user", "content": [ { "type": "text", "text": "List the top insights from the most relevant documents, with links." } ] }
        ]
      }
    }
  }
}

################################################################################
# 5) CREATE FOUNDRY ASSISTANT WITH MCP TOOL (Foundry auth only)
################################################################################

POST {{foundry-project-endpoint}}/assistants?api-version={{foundry-api-version}}
Authorization: Bearer {{foundry-bearer-token}}
Content-Type: application/json

{
  "instructions": "You are a knowledge assistant that answers questions using designated knowledge sources. Cite references and avoid unverifiable claims.",
  "tools": [
    {
      "type": "mcp",
      "server_label": "knowledge_agent",
      "server_url": "{{search-endpoint}}/agents/{{agent-name}}/mcp?api-version={{search-api-version}}",
      "allowed_tools": ["knowledge_agent_retrieve"]
    }
  ],
  "name": "{{foundry-assistant-name}}",
  "model": "gpt-4.1-mini"
}

################################################################################
# 6) FOUNDRY WORKFLOW (THREAD / MESSAGES / RUN)
################################################################################

# Provide real IDs from creation responses:
@assistant-id = <asst_xxx>
@thread-id = <thread_xxx>
@run-id = <run_xxx>

### 6.1 Create thread
POST {{foundry-project-endpoint}}/threads?api-version={{foundry-api-version}}
Authorization: Bearer {{foundry-bearer-token}}
Content-Type: application/json

{}

### 6.2 Add user question
POST {{foundry-project-endpoint}}/threads/{{thread-id}}/messages?api-version={{foundry-api-version}}
Authorization: Bearer {{foundry-bearer-token}}
Content-Type: application/json

{
  "role": "user",
  "content": "Summarize and cite the most important points from the PDF set."
}

### 6.3 Run with auto-approval; pass Search API key header to MCP server
POST {{foundry-project-endpoint}}/threads/{{thread-id}}/runs?api-version={{foundry-api-version}}
Authorization: Bearer {{foundry-bearer-token}}
Content-Type: application/json

{
  "assistant_id": "{{assistant-id}}",
  "tool_resources": {
    "mcp": [
      {
        "server_label": "knowledge_agent",
        "require_approval": "never",
        "headers": {
          "api-key": "{{search-api-key}}"
        }
      }
    ]
  }
}

### 6.4 Check run status
GET {{foundry-project-endpoint}}/threads/{{thread-id}}/runs/{{run-id}}?api-version={{foundry-api-version}}
Authorization: Bearer {{foundry-bearer-token}}

### 6.5 Get assistant response
GET {{foundry-project-endpoint}}/threads/{{thread-id}}/messages?api-version={{foundry-api-version}}
Authorization: Bearer {{foundry-bearer-token}}

################################################################################
# 7) MONITORING & STATUS
################################################################################

### 7.1 List knowledge sources
GET {{search-endpoint}}/knowledgeSources?api-version={{search-api-version}}
api-key: {{search-api-key}}

### 7.2 Agent details
GET {{search-endpoint}}/agents/{{agent-name}}?api-version={{search-api-version}}
api-key: {{search-api-key}}

### 7.3 Indexer status (replace with a real indexer name)
GET {{search-endpoint}}/indexers('<indexer-name>')/search.status?api-version={{search-api-version}}
api-key: {{search-api-key}}

### 7.4 Document count (replace with a real index name)
GET {{search-endpoint}}/indexes('<index-name>')/docs/$count?api-version={{search-api-version}}
api-key: {{search-api-key}}

################################################################################
# 8) CLEANUP
################################################################################

### 8.1 Delete Foundry assistant
DELETE {{foundry-project-endpoint}}/assistants/{{assistant-id}}?api-version={{foundry-api-version}}
Authorization: Bearer {{foundry-bearer-token}}

### 8.2 Delete knowledge agent
DELETE {{search-endpoint}}/agents/{{agent-name}}?api-version={{search-api-version}}
api-key: {{search-api-key}}

### 8.3 Delete knowledge sources
DELETE {{search-endpoint}}/knowledgeSources/{{ks-docs-1}}?api-version={{search-api-version}}
api-key: {{search-api-key}}

DELETE {{search-endpoint}}/knowledgeSources/{{ks-docs-2}}?api-version={{search-api-version}}
api-key: {{search-api-key}}
