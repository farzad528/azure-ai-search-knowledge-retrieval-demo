{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.38.33.27573",
      "templateHash": "18124044360892032748"
    }
  },
  "parameters": {
    "baseName": {
      "type": "string",
      "defaultValue": "aikb",
      "minLength": 3,
      "maxLength": 10,
      "metadata": {
        "description": "Base name for all resources (will be used to generate unique names)"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "environment": {
      "type": "string",
      "defaultValue": "dev",
      "allowedValues": [
        "dev",
        "staging",
        "prod"
      ],
      "metadata": {
        "description": "Environment name (dev, staging, prod)"
      }
    },
    "repositoryUrl": {
      "type": "string",
      "defaultValue": "https://github.com/farzad528/azure-ai-search-knowledge-retrieval-demo",
      "metadata": {
        "description": "GitHub repository URL for Static Web App"
      }
    },
    "branch": {
      "type": "string",
      "defaultValue": "main",
      "metadata": {
        "description": "GitHub repository branch"
      }
    },
    "repositoryToken": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "GitHub repository token for Static Web App deployment"
      }
    },
    "deploySampleData": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Deploy sample data (hotels index and Responsible AI PDF)"
      }
    }
  },
  "variables": {
    "skuMap": {
      "dev": {
        "search": "basic",
        "openai": "S0",
        "storage": "Standard_LRS",
        "staticWebApp": "Free"
      },
      "staging": {
        "search": "standard",
        "openai": "S0",
        "storage": "Standard_LRS",
        "staticWebApp": "Standard"
      },
      "prod": {
        "search": "standard",
        "openai": "S0",
        "storage": "Standard_GRS",
        "staticWebApp": "Standard"
      }
    },
    "uniqueSuffix": "[uniqueString(resourceGroup().id)]",
    "resourceNames": {
      "search": "[format('{0}-search-{1}', parameters('baseName'), variables('uniqueSuffix'))]",
      "openai": "[format('{0}-openai-{1}', parameters('baseName'), variables('uniqueSuffix'))]",
      "storage": "[toLower(format('{0}storage{1}', parameters('baseName'), variables('uniqueSuffix')))]",
      "hub": "[format('{0}-hub-{1}', parameters('baseName'), variables('uniqueSuffix'))]",
      "project": "[format('{0}-project-{1}', parameters('baseName'), variables('uniqueSuffix'))]",
      "staticWebApp": "[format('{0}-web-{1}', parameters('baseName'), variables('uniqueSuffix'))]"
    },
    "tags": {
      "environment": "[parameters('environment')]",
      "solution": "Azure AI Search Knowledge Retrieval",
      "managedBy": "Bicep"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2025-04-01",
      "name": "deploy-search",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "searchServiceName": {
            "value": "[variables('resourceNames').search]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "sku": {
            "value": "[variables('skuMap')[parameters('environment')].search]"
          },
          "tags": {
            "value": "[variables('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.38.33.27573",
              "templateHash": "5294857793062549890"
            }
          },
          "parameters": {
            "searchServiceName": {
              "type": "string",
              "metadata": {
                "description": "Name of the Azure AI Search service"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location for the search service"
              }
            },
            "sku": {
              "type": "string",
              "defaultValue": "basic",
              "allowedValues": [
                "basic",
                "standard",
                "standard2",
                "standard3",
                "storage_optimized_l1",
                "storage_optimized_l2"
              ],
              "metadata": {
                "description": "SKU for the search service"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags for the search service"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Search/searchServices",
              "apiVersion": "2023-11-01",
              "name": "[parameters('searchServiceName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "[parameters('sku')]"
              },
              "properties": {
                "hostingMode": "default",
                "partitionCount": 1,
                "replicaCount": 1,
                "publicNetworkAccess": "enabled",
                "semanticSearch": "free"
              }
            }
          ],
          "outputs": {
            "searchServiceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Search/searchServices', parameters('searchServiceName'))]"
            },
            "searchServiceName": {
              "type": "string",
              "value": "[parameters('searchServiceName')]"
            },
            "searchEndpoint": {
              "type": "string",
              "value": "[format('https://{0}.search.windows.net', parameters('searchServiceName'))]"
            },
            "searchAdminKey": {
              "type": "string",
              "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices', parameters('searchServiceName')), '2023-11-01').primaryKey]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2025-04-01",
      "name": "deploy-openai",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "openAIName": {
            "value": "[variables('resourceNames').openai]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "sku": {
            "value": "[variables('skuMap')[parameters('environment')].openai]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "embeddingDeploymentName": {
            "value": "text-embedding-3-large"
          },
          "embeddingModelName": {
            "value": "text-embedding-3-large"
          },
          "embeddingModelVersion": {
            "value": "1"
          },
          "embeddingCapacity": {
            "value": 120
          },
          "chatDeploymentName": {
            "value": "gpt-4o"
          },
          "chatModelName": {
            "value": "gpt-4o"
          },
          "chatModelVersion": {
            "value": "2024-08-06"
          },
          "chatCapacity": {
            "value": 50
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.38.33.27573",
              "templateHash": "12102310250342101777"
            }
          },
          "parameters": {
            "openAIName": {
              "type": "string",
              "metadata": {
                "description": "Name of the Azure OpenAI service"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location for the OpenAI service"
              }
            },
            "sku": {
              "type": "string",
              "defaultValue": "S0",
              "allowedValues": [
                "S0"
              ],
              "metadata": {
                "description": "SKU for the OpenAI service"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags for the OpenAI service"
              }
            },
            "embeddingDeploymentName": {
              "type": "string",
              "defaultValue": "text-embedding-3-large",
              "metadata": {
                "description": "Embedding model deployment name"
              }
            },
            "embeddingModelName": {
              "type": "string",
              "defaultValue": "text-embedding-3-large",
              "metadata": {
                "description": "Embedding model name"
              }
            },
            "embeddingModelVersion": {
              "type": "string",
              "defaultValue": "1",
              "metadata": {
                "description": "Embedding model version"
              }
            },
            "embeddingCapacity": {
              "type": "int",
              "defaultValue": 120,
              "metadata": {
                "description": "Embedding model capacity (TPM in thousands)"
              }
            },
            "chatDeploymentName": {
              "type": "string",
              "defaultValue": "gpt-4o",
              "metadata": {
                "description": "Chat model deployment name"
              }
            },
            "chatModelName": {
              "type": "string",
              "defaultValue": "gpt-4o",
              "metadata": {
                "description": "Chat model name"
              }
            },
            "chatModelVersion": {
              "type": "string",
              "defaultValue": "2024-08-06",
              "metadata": {
                "description": "Chat model version"
              }
            },
            "chatCapacity": {
              "type": "int",
              "defaultValue": 50,
              "metadata": {
                "description": "Chat model capacity (TPM in thousands)"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.CognitiveServices/accounts",
              "apiVersion": "2023-05-01",
              "name": "[parameters('openAIName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "kind": "OpenAI",
              "sku": {
                "name": "[parameters('sku')]"
              },
              "properties": {
                "customSubDomainName": "[parameters('openAIName')]",
                "publicNetworkAccess": "Enabled",
                "networkAcls": {
                  "defaultAction": "Allow"
                }
              }
            },
            {
              "type": "Microsoft.CognitiveServices/accounts/deployments",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', parameters('openAIName'), parameters('embeddingDeploymentName'))]",
              "sku": {
                "name": "Standard",
                "capacity": "[parameters('embeddingCapacity')]"
              },
              "properties": {
                "model": {
                  "format": "OpenAI",
                  "name": "[parameters('embeddingModelName')]",
                  "version": "[parameters('embeddingModelVersion')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('openAIName'))]"
              ]
            },
            {
              "type": "Microsoft.CognitiveServices/accounts/deployments",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', parameters('openAIName'), parameters('chatDeploymentName'))]",
              "sku": {
                "name": "Standard",
                "capacity": "[parameters('chatCapacity')]"
              },
              "properties": {
                "model": {
                  "format": "OpenAI",
                  "name": "[parameters('chatModelName')]",
                  "version": "[parameters('chatModelVersion')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts/deployments', parameters('openAIName'), parameters('embeddingDeploymentName'))]",
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('openAIName'))]"
              ]
            }
          ],
          "outputs": {
            "openAIId": {
              "type": "string",
              "value": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('openAIName'))]"
            },
            "openAIName": {
              "type": "string",
              "value": "[parameters('openAIName')]"
            },
            "openAIEndpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('openAIName')), '2023-05-01').endpoint]"
            },
            "openAIKey": {
              "type": "string",
              "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', parameters('openAIName')), '2023-05-01').key1]"
            },
            "embeddingDeploymentName": {
              "type": "string",
              "value": "[parameters('embeddingDeploymentName')]"
            },
            "chatDeploymentName": {
              "type": "string",
              "value": "[parameters('chatDeploymentName')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2025-04-01",
      "name": "deploy-storage",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "storageAccountName": {
            "value": "[variables('resourceNames').storage]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "sku": {
            "value": "[variables('skuMap')[parameters('environment')].storage]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "sampleDataContainerName": {
            "value": "sample-documents"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.38.33.27573",
              "templateHash": "10746232780939829241"
            }
          },
          "parameters": {
            "storageAccountName": {
              "type": "string",
              "metadata": {
                "description": "Name of the storage account"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location for the storage account"
              }
            },
            "sku": {
              "type": "string",
              "defaultValue": "Standard_LRS",
              "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "Standard_ZRS",
                "Premium_LRS"
              ],
              "metadata": {
                "description": "SKU for the storage account"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags for the storage account"
              }
            },
            "sampleDataContainerName": {
              "type": "string",
              "defaultValue": "sample-documents",
              "metadata": {
                "description": "Container name for sample data"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2023-01-01",
              "name": "[parameters('storageAccountName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "[parameters('sku')]"
              },
              "kind": "StorageV2",
              "properties": {
                "accessTier": "Hot",
                "allowBlobPublicAccess": false,
                "minimumTlsVersion": "TLS1_2",
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                  "services": {
                    "blob": {
                      "enabled": true
                    },
                    "file": {
                      "enabled": true
                    }
                  },
                  "keySource": "Microsoft.Storage"
                }
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}', parameters('storageAccountName'), 'default')]",
              "properties": {
                "deleteRetentionPolicy": {
                  "enabled": true,
                  "days": 7
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), 'default', parameters('sampleDataContainerName'))]",
              "properties": {
                "publicAccess": "None"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
              ]
            }
          ],
          "outputs": {
            "storageAccountId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            },
            "storageAccountName": {
              "type": "string",
              "value": "[parameters('storageAccountName')]"
            },
            "storageAccountPrimaryEndpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').primaryEndpoints.blob]"
            },
            "sampleDataContainerName": {
              "type": "string",
              "value": "[parameters('sampleDataContainerName')]"
            },
            "storageAccountKey": {
              "type": "string",
              "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').keys[0].value]"
            },
            "storageConnectionString": {
              "type": "string",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix={2}', parameters('storageAccountName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').keys[0].value, environment().suffixes.storage)]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2025-04-01",
      "name": "deploy-foundry",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "hubName": {
            "value": "[variables('resourceNames').hub]"
          },
          "projectName": {
            "value": "[variables('resourceNames').project]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "openAIResourceId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy-openai'), '2025-04-01').outputs.openAIId.value]"
          },
          "searchResourceId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy-search'), '2025-04-01').outputs.searchServiceId.value]"
          },
          "storageAccountId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy-storage'), '2025-04-01').outputs.storageAccountId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.38.33.27573",
              "templateHash": "7074958133617667931"
            }
          },
          "parameters": {
            "hubName": {
              "type": "string",
              "metadata": {
                "description": "Name of the AI Foundry hub"
              }
            },
            "projectName": {
              "type": "string",
              "metadata": {
                "description": "Name of the AI Foundry project"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location for AI Foundry resources"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags for AI Foundry resources"
              }
            },
            "openAIResourceId": {
              "type": "string",
              "metadata": {
                "description": "OpenAI resource ID to connect"
              }
            },
            "searchResourceId": {
              "type": "string",
              "metadata": {
                "description": "Search resource ID to connect"
              }
            },
            "storageAccountId": {
              "type": "string",
              "metadata": {
                "description": "Storage account resource ID to connect"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.MachineLearningServices/workspaces",
              "apiVersion": "2024-04-01",
              "name": "[parameters('hubName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "kind": "Hub",
              "properties": {
                "description": "Azure AI Foundry Hub for Knowledge Retrieval Demo",
                "friendlyName": "[parameters('hubName')]",
                "storageAccount": "[parameters('storageAccountId')]",
                "publicNetworkAccess": "Enabled"
              }
            },
            {
              "type": "Microsoft.MachineLearningServices/workspaces",
              "apiVersion": "2024-04-01",
              "name": "[parameters('projectName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "kind": "Project",
              "properties": {
                "description": "Azure AI Foundry Project for Agentic RAG",
                "friendlyName": "[parameters('projectName')]",
                "hubResourceId": "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('hubName'))]",
                "publicNetworkAccess": "Enabled"
              },
              "dependsOn": [
                "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('hubName'))]"
              ]
            },
            {
              "type": "Microsoft.MachineLearningServices/workspaces/connections",
              "apiVersion": "2024-04-01",
              "name": "[format('{0}/{1}', parameters('projectName'), 'openai-connection')]",
              "properties": {
                "category": "AzureOpenAI",
                "target": "[parameters('openAIResourceId')]",
                "authType": "AAD",
                "isSharedToAll": true,
                "metadata": {
                  "ApiType": "Azure",
                  "ResourceId": "[parameters('openAIResourceId')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('projectName'))]"
              ]
            },
            {
              "type": "Microsoft.MachineLearningServices/workspaces/connections",
              "apiVersion": "2024-04-01",
              "name": "[format('{0}/{1}', parameters('projectName'), 'search-connection')]",
              "properties": {
                "category": "CognitiveSearch",
                "target": "[parameters('searchResourceId')]",
                "authType": "AAD",
                "isSharedToAll": true,
                "metadata": {
                  "ResourceId": "[parameters('searchResourceId')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('projectName'))]"
              ]
            }
          ],
          "outputs": {
            "hubId": {
              "type": "string",
              "value": "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('hubName'))]"
            },
            "hubName": {
              "type": "string",
              "value": "[parameters('hubName')]"
            },
            "projectId": {
              "type": "string",
              "value": "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('projectName'))]"
            },
            "projectName": {
              "type": "string",
              "value": "[parameters('projectName')]"
            },
            "projectEndpoint": {
              "type": "string",
              "value": "[format('https://{0}.{1}.api.azureml.ms', reference(resourceId('Microsoft.MachineLearningServices/workspaces', parameters('projectName')), '2024-04-01').workspaceId, parameters('location'))]"
            },
            "hubPrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.MachineLearningServices/workspaces', parameters('hubName')), '2024-04-01', 'full').identity.principalId]"
            },
            "projectPrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.MachineLearningServices/workspaces', parameters('projectName')), '2024-04-01', 'full').identity.principalId]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'deploy-openai')]",
        "[resourceId('Microsoft.Resources/deployments', 'deploy-search')]",
        "[resourceId('Microsoft.Resources/deployments', 'deploy-storage')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2025-04-01",
      "name": "deploy-staticwebapp",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "staticWebAppName": {
            "value": "[variables('resourceNames').staticWebApp]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "sku": {
            "value": "[variables('skuMap')[parameters('environment')].staticWebApp]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "repositoryUrl": {
            "value": "[parameters('repositoryUrl')]"
          },
          "branch": {
            "value": "[parameters('branch')]"
          },
          "repositoryToken": {
            "value": "[parameters('repositoryToken')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.38.33.27573",
              "templateHash": "12097102036641970586"
            }
          },
          "parameters": {
            "staticWebAppName": {
              "type": "string",
              "metadata": {
                "description": "Name of the static web app"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location for the static web app"
              }
            },
            "sku": {
              "type": "string",
              "defaultValue": "Free",
              "allowedValues": [
                "Free",
                "Standard"
              ],
              "metadata": {
                "description": "SKU for the static web app"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags for the static web app"
              }
            },
            "repositoryUrl": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Repository URL"
              }
            },
            "branch": {
              "type": "string",
              "defaultValue": "main",
              "metadata": {
                "description": "Branch name"
              }
            },
            "repositoryToken": {
              "type": "securestring",
              "defaultValue": "",
              "metadata": {
                "description": "Repository token (optional)"
              }
            },
            "buildProperties": {
              "type": "object",
              "defaultValue": {
                "appLocation": "/",
                "apiLocation": "",
                "outputLocation": ".next",
                "appBuildCommand": "npm run build",
                "apiBuildCommand": ""
              },
              "metadata": {
                "description": "Build properties"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/staticSites",
              "apiVersion": "2023-01-01",
              "name": "[parameters('staticWebAppName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "[parameters('sku')]",
                "tier": "[parameters('sku')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "repositoryUrl": "[parameters('repositoryUrl')]",
                "branch": "[parameters('branch')]",
                "repositoryToken": "[parameters('repositoryToken')]",
                "buildProperties": "[parameters('buildProperties')]",
                "provider": "GitHub",
                "stagingEnvironmentPolicy": "Enabled",
                "allowConfigFileUpdates": true,
                "enterpriseGradeCdnStatus": "Disabled"
              }
            }
          ],
          "outputs": {
            "staticWebAppId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Web/staticSites', parameters('staticWebAppName'))]"
            },
            "staticWebAppName": {
              "type": "string",
              "value": "[parameters('staticWebAppName')]"
            },
            "staticWebAppUrl": {
              "type": "string",
              "value": "[format('https://{0}', reference(resourceId('Microsoft.Web/staticSites', parameters('staticWebAppName')), '2023-01-01').defaultHostname)]"
            },
            "staticWebAppPrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Web/staticSites', parameters('staticWebAppName')), '2023-01-01', 'full').identity.principalId]"
            }
          }
        }
      }
    }
  ],
  "outputs": {
    "resourceGroupName": {
      "type": "string",
      "value": "[resourceGroup().name]"
    },
    "location": {
      "type": "string",
      "value": "[parameters('location')]"
    },
    "searchEndpoint": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy-search'), '2025-04-01').outputs.searchEndpoint.value]"
    },
    "searchServiceName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy-search'), '2025-04-01').outputs.searchServiceName.value]"
    },
    "searchAdminKey": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy-search'), '2025-04-01').outputs.searchAdminKey.value]"
    },
    "openAIEndpoint": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy-openai'), '2025-04-01').outputs.openAIEndpoint.value]"
    },
    "openAIKey": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy-openai'), '2025-04-01').outputs.openAIKey.value]"
    },
    "embeddingDeploymentName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy-openai'), '2025-04-01').outputs.embeddingDeploymentName.value]"
    },
    "chatDeploymentName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy-openai'), '2025-04-01').outputs.chatDeploymentName.value]"
    },
    "storageAccountName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy-storage'), '2025-04-01').outputs.storageAccountName.value]"
    },
    "storageConnectionString": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy-storage'), '2025-04-01').outputs.storageConnectionString.value]"
    },
    "sampleDataContainerName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy-storage'), '2025-04-01').outputs.sampleDataContainerName.value]"
    },
    "foundryProjectEndpoint": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy-foundry'), '2025-04-01').outputs.projectEndpoint.value]"
    },
    "foundryProjectName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy-foundry'), '2025-04-01').outputs.projectName.value]"
    },
    "foundryHubName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy-foundry'), '2025-04-01').outputs.hubName.value]"
    },
    "staticWebAppUrl": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy-staticwebapp'), '2025-04-01').outputs.staticWebAppUrl.value]"
    },
    "staticWebAppName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy-staticwebapp'), '2025-04-01').outputs.staticWebAppName.value]"
    },
    "environmentVariables": {
      "type": "object",
      "value": {
        "AZURE_SEARCH_ENDPOINT": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy-search'), '2025-04-01').outputs.searchEndpoint.value]",
        "AZURE_SEARCH_API_KEY": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy-search'), '2025-04-01').outputs.searchAdminKey.value]",
        "AZURE_SEARCH_API_VERSION": "2025-08-01-preview",
        "NEXT_PUBLIC_AZURE_OPENAI_ENDPOINT": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy-openai'), '2025-04-01').outputs.openAIEndpoint.value]",
        "AZURE_OPENAI_API_KEY": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy-openai'), '2025-04-01').outputs.openAIKey.value]",
        "FOUNDRY_PROJECT_ENDPOINT": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy-foundry'), '2025-04-01').outputs.projectEndpoint.value]",
        "FOUNDRY_API_VERSION": "2025-05-01",
        "AZURE_AUTH_METHOD": "managed-identity",
        "NEXT_PUBLIC_SEARCH_ENDPOINT": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy-search'), '2025-04-01').outputs.searchEndpoint.value]"
      }
    },
    "deploymentSummary": {
      "type": "object",
      "value": {
        "message": "Deployment completed successfully!",
        "nextSteps": [
          "[format('1. Visit your Static Web App at: {0}', reference(resourceId('Microsoft.Resources/deployments', 'deploy-staticwebapp'), '2025-04-01').outputs.staticWebAppUrl.value)]",
          "2. Configure GitHub Actions for automated deployments",
          "3. Upload sample data using the provided script",
          "4. Create your first knowledge base in the app"
        ],
        "estimatedMonthlyCost": "[if(equals(parameters('environment'), 'dev'), '$100-150', if(equals(parameters('environment'), 'staging'), '$250-350', '$500+'))]",
        "resources": {
          "search": "[variables('resourceNames').search]",
          "openai": "[variables('resourceNames').openai]",
          "storage": "[variables('resourceNames').storage]",
          "foundry": "[format('{0} / {1}', variables('resourceNames').hub, variables('resourceNames').project)]",
          "staticWebApp": "[variables('resourceNames').staticWebApp]"
        }
      }
    }
  }
}